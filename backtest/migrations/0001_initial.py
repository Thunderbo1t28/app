# Generated by Django 4.2.9 on 2024-02-20 15:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BacktestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('min', models.FloatField(blank=True, null=True)),
                ('max', models.FloatField(blank=True, null=True)),
                ('median', models.FloatField(blank=True, null=True)),
                ('mean', models.FloatField(blank=True, null=True)),
                ('std', models.FloatField(blank=True, null=True)),
                ('skew', models.FloatField(blank=True, null=True)),
                ('ann_mean', models.FloatField(blank=True, null=True)),
                ('ann_std', models.FloatField(blank=True, null=True)),
                ('sharpe', models.FloatField(blank=True, null=True)),
                ('sortino', models.FloatField(blank=True, null=True)),
                ('avg_drawdown', models.FloatField(blank=True, null=True)),
                ('time_in_drawdown', models.FloatField(blank=True, null=True)),
                ('calmar', models.FloatField(blank=True, null=True)),
                ('avg_return_to_drawdown', models.FloatField(blank=True, null=True)),
                ('avg_loss', models.FloatField(blank=True, null=True)),
                ('avg_gain', models.FloatField(blank=True, null=True)),
                ('gaintolossratio', models.FloatField(blank=True, null=True)),
                ('profitfactor', models.FloatField(blank=True, null=True)),
                ('hitrate', models.FloatField(blank=True, null=True)),
                ('t_stat', models.FloatField(blank=True, null=True)),
                ('p_value', models.FloatField(blank=True, null=True)),
                ('metrics', models.JSONField(blank=True, null=True)),
                ('additional_info', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='BacktestResult2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('instruments', models.TextField()),
                ('min', models.FloatField(blank=True, null=True)),
                ('max', models.FloatField(blank=True, null=True)),
                ('median', models.FloatField(blank=True, null=True)),
                ('mean', models.FloatField(blank=True, null=True)),
                ('std', models.FloatField(blank=True, null=True)),
                ('skew', models.FloatField(blank=True, null=True)),
                ('ann_mean', models.FloatField(blank=True, null=True)),
                ('ann_std', models.FloatField(blank=True, null=True)),
                ('sharpe', models.FloatField(blank=True, null=True)),
                ('sortino', models.FloatField(blank=True, null=True)),
                ('avg_drawdown', models.FloatField(blank=True, null=True)),
                ('time_in_drawdown', models.FloatField(blank=True, null=True)),
                ('calmar', models.FloatField(blank=True, null=True)),
                ('avg_return_to_drawdown', models.FloatField(blank=True, null=True)),
                ('avg_loss', models.FloatField(blank=True, null=True)),
                ('avg_gain', models.FloatField(blank=True, null=True)),
                ('gaintolossratio', models.FloatField(blank=True, null=True)),
                ('profitfactor', models.FloatField(blank=True, null=True)),
                ('hitrate', models.FloatField(blank=True, null=True)),
                ('t_stat', models.FloatField(blank=True, null=True)),
                ('p_value', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TradingConfiguration',
            fields=[
                ('config_id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='TradingRuleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('function', models.CharField(max_length=100)),
                ('data', models.JSONField()),
                ('other_args', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='TradingRuleConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_name', models.CharField(max_length=500)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backtest.tradingconfiguration')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument_name', models.CharField(max_length=100)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backtest.tradingconfiguration')),
            ],
        ),
    ]
